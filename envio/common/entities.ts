import type { Enum as FlowEnum } from "../flow/bindings";
import type { Enum as LockupEnum } from "../lockup/bindings";

/**
 * These bindings were copy-pasted from the bindings directory generated by Envio. They may have to be updated
 * to match the latest GraphQL schema.
 */
export namespace CommonEntities {
  export type Asset = {
    readonly address: string;
    readonly chainId: bigint;
    readonly decimals: bigint;
    readonly id: string;
    readonly name: string;
    readonly symbol: string;
  };

  export type Revenue = {
    readonly amount: number;
    readonly chainId: bigint;
    readonly currency: string;
    readonly date: string;
    readonly dateTimestamp: Date;
    readonly id: string;
  };

  export type RevenueTransaction = {
    readonly amount: number;
    readonly block: bigint;
    readonly hash: string;
    readonly id: string;
    readonly revenue_id: string;
    readonly timestamp: bigint;
  };

  export type StreamAction = {
    readonly addressA: undefined | string;
    readonly addressB: undefined | string;
    readonly amountA: undefined | bigint;
    readonly amountB: undefined | bigint;
    readonly block: bigint;
    readonly category: FlowEnum.ActionCategory | LockupEnum.ActionCategory;
    readonly chainId: bigint;
    readonly contract: string;
    readonly fee: undefined | bigint;
    readonly from: string;
    readonly hash: string;
    readonly id: string;
    readonly stream_id: undefined | string;
    readonly subgraphId: bigint;
    readonly timestamp: bigint;
  };

  export type StreamWatcher = {
    readonly actionCounter: bigint;
    readonly chainId: bigint;
    readonly id: string;
    readonly streamCounter: bigint;
  };

  export type User = {
    readonly address: string;
    readonly chainId: bigint;
    readonly id: string;
    readonly isOnlyAirdropClaimer: boolean;
  };

  export type UserTransaction = {
    readonly block: bigint;
    readonly hash: string;
    readonly id: string;
    readonly isAirdropClaim: boolean;
    readonly fee: number;
    readonly timestamp: bigint;
    readonly user_id: string;
  };
}
