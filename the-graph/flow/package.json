{
  "name": "@sablier/indexers-graph-flow",
  "description": "The Graph indexer for Sablier Flow",
  "version": "2.2.0",
  "author": {
    "name": "Sablier Labs Ltd",
    "url": "https://sablier.com"
  },
  "bugs": {
    "url": "https://github.com/sablier-labs/indexers/issues"
  },
  "config": {
    "dir_chains": "../../constants/src/addresses",
    "dir_generated": "src/generated",
    "flags_deploy": "--ipfs https://api.thegraph.com/ipfs/ --node https://api.thegraph.com/deploy/"
  },
  "dependencies": {
    "@biomejs/biome": "1.9.4",
    "@graphprotocol/graph-cli": "0.96.0",
    "@graphprotocol/graph-ts": "0.38.0",
    "babel-polyfill": "^6.26.0",
    "babel-register": "^6.26.0",
    "dotenv-cli": "^8.0.0",
    "mustache": "^4.2.0",
    "prettier": "^3.5.3",
    "rimraf": "^6.0.1",
    "typescript": "5.5.2"
  },
  "homepage": "https://github.com/sablier-labs/indexers#readme",
  "license": "LGPL-3.0",
  "private": true,
  "repository": {
    "directory": "the-graph/flow",
    "type": "git",
    "url": "https://github.com/sablier-labs/indexers.git"
  },
  "scripts": {
    "clean": "rimraf tsconfig.tsbuildinfo subgraph.yaml build",
    "clean-generated": "rimraf $npm_package_config_dir_generated",
    "clean-modules": "rimraf node_modules",
    "prettier:check": "bun run prettier --check --cache --config ../../.prettierrc.yml --ignore-path ../../.prettierignore .",
    "prettier:write": "bun run prettier --write --cache --config ../../.prettierrc.yml --ignore-path ../../.prettierignore --log-level warn .",
    "build": "graph build",
    "codegen": "graph codegen --output-dir $npm_package_config_dir_generated/types/",
    "create-external:lightlink": "graph create --node https://graph.pegasus.lightlink.io/rpc lightlink/sablier-flow-lightlink",
    "create-external:ultra": "dotenv -e ./../../.env -- bun run create-external:ultra-command",
    "create-external:ultra-command": "curl --location https://graph.evm.ultra.io --header \"CF-Access-Client-Id: $ULTRA_HEADER_ID\" --header \"CF-Access-Client-Secret: $ULTRA_HEADER_SECRET\" --header \"Content-Type: application/json\" --data '{\"jsonrpc\": \"2.0\", \"id\": 1, \"method\": \"subgraph_create\", \"params\": {\"name\": \"sablier-flow-ultra\"}}'",
    "create-external:xdc": "graph create --node https://graph.xinfin.network/ xdc/sablier-flow-xdc",
    "deploy": "graph deploy $NAME",
    "deploy-external:form": "CHAIN=form bun run setup && graph deploy sablier-flow-form --node https://formapi.0xgraph.xyz/deploy --ipfs https://formapi.0xgraph.xyz/ipfs --deploy-key",
    "deploy-external:lightlink": "CHAIN=lightlink bun run setup && graph deploy --node https://graph.pegasus.lightlink.io/rpc --ipfs https://api.thegraph.com/ipfs/ lightlink/sablier-flow-lightlink",
    "deploy-external:ultra": "dotenv -e ./../../.env -- bun run deploy-external:ultra-command",
    "deploy-external:ultra-command": "CHAIN=ultra bun run setup && graph deploy --node https://graph.evm.ultra.io --ipfs https://api.thegraph.com/ipfs/ --headers \"$ULTRA_HEADERS\" sablier-flow-ultra",
    "deploy-external:xdc": "CHAIN=xdc bun run setup && graph deploy --node https://graph.xinfin.network/ --ipfs https://api.thegraph.com/ipfs/ xdc/sablier-flow-xdc",
    "deploy:abstract": "CHAIN=abstract bun run setup && NAME=sablier-flow-abstract bun run deploy",
    "deploy:arbitrum": "CHAIN=arbitrum bun run setup && NAME=sablier-flow-arbitrum bun run deploy",
    "deploy:arbitrum-sepolia": "CHAIN=arbitrum-sepolia bun run setup && NAME=sablier-flow-arbitrum-sepolia bun run deploy",
    "deploy:avalanche": "CHAIN=avalanche bun run setup && NAME=sablier-flow-avalanche bun run deploy",
    "deploy:base": "CHAIN=base bun run setup && NAME=sablier-flow-base bun run deploy",
    "deploy:base-sepolia": "CHAIN=base-sepolia bun run setup && NAME=sablier-flow-base-sepolia bun run deploy",
    "deploy:berachain": "CHAIN=berachain bun run setup && NAME=sablier-flow-berachain bun run deploy",
    "deploy:blast": "CHAIN=blast bun run setup && NAME=sablier-flow-blast bun run deploy",
    "deploy:bsc": "CHAIN=bsc bun run setup && NAME=sablier-flow-bsc bun run deploy",
    "deploy:chiliz": "CHAIN=chiliz bun run setup && NAME=sablier-flow-chiliz bun run deploy",
    "deploy:experimental": "CHAIN=experimental bun run setup && NAME=sablier-flow-experimental bun run deploy",
    "deploy:gnosis": "CHAIN=gnosis bun run setup && NAME=sablier-flow-gnosis bun run deploy",
    "deploy:iotex": "CHAIN=iotex bun run setup && NAME=sablier-flow-iotex bun run deploy",
    "deploy:linea": "CHAIN=linea bun run setup && NAME=sablier-flow-linea bun run deploy",
    "deploy:mainnet": "CHAIN=mainnet bun run setup && NAME=sablier-flow-ethereum bun run deploy",
    "deploy:mode": "CHAIN=mode bun run setup && NAME=sablier-flow-mode bun run deploy",
    "deploy:optimism": "CHAIN=optimism bun run setup && NAME=sablier-flow-optimism bun run deploy",
    "deploy:optimism-sepolia": "CHAIN=optimism-sepolia bun run setup && NAME=sablier-flow-optimism-sepolia bun run deploy",
    "deploy:polygon": "CHAIN=polygon bun run setup && NAME=sablier-flow-polygon bun run deploy",
    "deploy:scroll": "CHAIN=scroll bun run setup && NAME=sablier-flow-scroll bun run deploy",
    "deploy:sei": "CHAIN=sei bun run setup && NAME=sablier-flow-sei bun run deploy",
    "deploy:sepolia": "CHAIN=sepolia bun run setup && NAME=sablier-flow-sepolia bun run deploy",
    "deploy:unichain": "CHAIN=unichain bun run setup && NAME=sablier-flow-unichain bun run deploy",
    "deploy:zksync": "CHAIN=zksync bun run setup && NAME=sablier-flow-zksync bun run deploy",
    "deploy:zksync-sepolia": "CHAIN=zksync-sepolia bun run setup && NAME=sablier-flow-zksync-sepolia bun run deploy",
    "setup": "bun run clean && bun run template && bun run codegen",
    "setup:abstract": "bun run clean-generated && CHAIN=abstract bun run setup",
    "setup:arbitrum": "bun run clean-generated && CHAIN=arbitrum bun run setup",
    "setup:arbitrum-sepolia": "bun run clean-generated && CHAIN=arbitrum-sepolia bun run setup",
    "setup:avalanche": "bun run clean-generated && CHAIN=avalanche bun run setup",
    "setup:base": "bun run clean-generated && CHAIN=base bun run setup",
    "setup:base-sepolia": "bun run clean-generated && CHAIN=base-sepolia bun run setup",
    "setup:berachain": "bun run clean-generated && CHAIN=berachain bun run setup",
    "setup:blast": "bun run clean-generated && CHAIN=blast bun run setup",
    "setup:bsc": "bun run clean-generated && CHAIN=bsc bun run setup",
    "setup:chiliz": "bun run clean-generated && CHAIN=chiliz bun run setup",
    "setup:experimental": "bun run clean-generated && CHAIN=experimental bun run setup",
    "setup:form": "bun run clean-generated && CHAIN=form bun run setup",
    "setup:gnosis": "bun run clean-generated && CHAIN=gnosis bun run setup",
    "setup:iotex": "bun run clean-generated && CHAIN=iotex bun run setup",
    "setup:lightlink": "bun run clean-generated && CHAIN=lightlink bun run setup",
    "setup:linea": "bun run clean-generated && CHAIN=linea bun run setup",
    "setup:mainnet": "bun run clean-generated && CHAIN=mainnet bun run setup",
    "setup:mode": "bun run clean-generated && CHAIN=mode bun run setup",
    "setup:optimism": "bun run clean-generated && CHAIN=optimism bun run setup",
    "setup:optimism-sepolia": "bun run clean-generated && CHAIN=optimism-sepolia bun run setup",
    "setup:polygon": "bun run clean-generated && CHAIN=polygon bun run setup",
    "setup:scroll": "bun run clean-generated && CHAIN=scroll bun run setup",
    "setup:sei": "bun run clean-generated && CHAIN=sei bun run setup",
    "setup:sepolia": "bun run clean-generated && CHAIN=sepolia bun run setup",
    "setup:unichain": "bun run clean-generated && CHAIN=unichain bun run setup",
    "setup:xdc": "bun run clean-generated && CHAIN=xdc bun run setup",
    "setup:zksync": "bun run clean-generated && CHAIN=zksync bun run setup",
    "setup:zksync-sepolia": "bun run clean-generated && CHAIN=zksync-sepolia bun run setup",
    "template": "bun run template-chain && bun run template-config && bun run template-env",
    "template-chain": "tsc $npm_package_config_dir_chains/$CHAIN.ts --outDir $npm_package_config_dir_generated",
    "template-config": "mustache $npm_package_config_dir_generated/$CHAIN.js subgraph.template.yaml > subgraph.yaml",
    "template-env": "cp $npm_package_config_dir_chains/$CHAIN.ts $npm_package_config_dir_generated/env.ts"
  }
}
