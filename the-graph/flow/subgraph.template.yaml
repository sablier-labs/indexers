specVersion: 0.0.5
description: sablier-v2-flow
repository: https://github.com/sablier-labs/v2-subgraphs
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: ContractInitializer
    network: {{chain}}
    source:
      address: "{{initializer_flow}}"
      abi: SablierFlow
      startBlock: {{startBlock_flow}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Stream
      abis:
        - name: ERC20
          file: ./abis/ERC20.json
        - name: ERC20Bytes
          file: ./abis/ERC20Bytes.json
        - name: SablierFlow
          file: ./abis/SablierFlow.json
      eventHandlers:
        - event: CreateFlowStream(uint256,indexed address,indexed address,uint128,indexed address,bool)
          handler: handleInitializer_Create_V10
        - event: TransferAdmin(indexed address,indexed address)
          handler: handleInitializer_Admin
      file: ./src/mappings/index.ts
templates:
  - kind: ethereum/contract
    name: ContractFlow
    network: {{chain}}
    source:
      abi: SablierFlow
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Action
        - Asset
        - Batch
        - Batcher
        - Broker
        - Contract
        - Stream
        - Watcher
      abis:
        - name: ERC20
          file: ./abis/ERC20.json
        - name: ERC20Bytes
          file: ./abis/ERC20Bytes.json
        - name: SablierFlow
          file: ./abis/SablierFlow.json
      eventHandlers:
        - event: AdjustFlowStream(indexed uint256,uint256,uint128,uint128)
          handler: handleAdjust
        - event: Approval(indexed address,indexed address,indexed uint256)
          handler: handleApproval
        - event: ApprovalForAll(indexed address,indexed address,bool)
          handler: handleApprovalForAll
        - event: CreateFlowStream(uint256,indexed address,indexed address,uint128,indexed address,bool)
          handler: handleCreate
        - event: DepositFlowStream(indexed uint256,indexed address,uint128)
          handler: handleDeposit
        - event: PauseFlowStream(indexed uint256,indexed address,indexed address,uint256)
          handler: handlePause
        - event: RefundFromFlowStream(indexed uint256,indexed address,uint128)
          handler: handleRefund
        - event: RestartFlowStream(indexed uint256,indexed address,uint128)
          handler: handleRestart
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer
        - event: TransferAdmin(indexed address,indexed address)
          handler: handleTransferAdmin
        - event: VoidFlowStream(indexed uint256,indexed address,indexed address,address,uint256,uint256)
          handler: handleVoid
        - event: WithdrawFromFlowStream(indexed uint256,indexed address,indexed address,address,uint128,uint128)
          handler: handleWithdraw
      file: ./src/mappings/index.ts
