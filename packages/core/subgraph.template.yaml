specVersion: 0.0.5
description: Sablier V2 Subgraph
repository: https://github.com/sablier-labs/v2-subgraphs
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: ContractInitializer
    network: {{chain}}
    source:
      address: "{{initializer}}"
      abi: SablierV2LockupLinear
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Stream
      abis:
        - name: ERC20
          file: ./abis/ERC20.json
        - name: PRBProxy
          file: ./abis/PRBProxy.json
        - name: PRBProxyRegistry
          file: ./abis/PRBProxyRegistry.json
        - name: SablierV2LockupDynamic
          file: ./abis/SablierV2LockupDynamic.json
        - name: SablierV2LockupLinear
          file: ./abis/SablierV2LockupLinear.json
      eventHandlers:
        - event:
            CreateLockupLinearStream(uint256,indexed address,indexed address,indexed
            address,(uint128,uint128,uint128),address,bool,(uint40,uint40,uint40),address)
          handler: handleInitializer
      file: ./src/mappings/index.ts
templates:
  - kind: ethereum/contract
    name: ContractLockupLinear
    network: {{chain}}
    source:
      abi: SablierV2LockupLinear
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Action
        - Batch
        - Batcher
        - Contract
        - Segment
        - Stream
        - Token
        - Watcher
      abis:
        - name: ERC20
          file: ./abis/ERC20.json
        - name: PRBProxy
          file: ./abis/PRBProxy.json
        - name: PRBProxyRegistry
          file: ./abis/PRBProxyRegistry.json
        - name: SablierV2LockupDynamic
          file: ./abis/SablierV2LockupDynamic.json
        - name: SablierV2LockupLinear
          file: ./abis/SablierV2LockupLinear.json
      eventHandlers:
        - event: Approval(indexed address,indexed address,indexed uint256)
          handler: handleApproval
        - event: ApprovalForAll(indexed address,indexed address,bool)
          handler: handleApprovalForAll
        - event: CancelLockupStream(indexed uint256,indexed address,indexed address,uint128,uint128)
          handler: handleCancel
        - event:
            CreateLockupLinearStream(uint256,indexed address,indexed address,indexed
            address,(uint128,uint128,uint128),address,bool,(uint40,uint40,uint40),address)
          handler: handleCreateLinear
        - event: RenounceLockupStream(indexed uint256)
          handler: handleRenounce
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer
        - event: TransferAdmin(indexed address,indexed address)
          handler: handleTransferAdmin
        - event: WithdrawFromLockupStream(indexed uint256,indexed address,uint128)
          handler: handleWithdraw
      file: ./src/mappings/index.ts
  - kind: ethereum/contract
    name: ContractLockupDynamic
    network: {{chain}}
    source:
      abi: SablierV2LockupDynamic
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Action
        - Contract
        - Batch
        - Batcher
        - Segment
        - Stream
        - Token
        - Watcher
      abis:
        - name: ERC20
          file: ./abis/ERC20.json
        - name: PRBProxy
          file: ./abis/PRBProxy.json
        - name: PRBProxyRegistry
          file: ./abis/PRBProxyRegistry.json
        - name: SablierV2LockupDynamic
          file: ./abis/SablierV2LockupDynamic.json
        - name: SablierV2LockupLinear
          file: ./abis/SablierV2LockupLinear.json
      eventHandlers:
        - event: Approval(indexed address,indexed address,indexed uint256)
          handler: handleApproval
        - event: ApprovalForAll(indexed address,indexed address,bool)
          handler: handleApprovalForAll
        - event: CancelLockupStream(indexed uint256,indexed address,indexed address,uint128,uint128)
          handler: handleCancel
        - event:
            CreateLockupDynamicStream(uint256,indexed address,indexed address,indexed
            address,(uint128,uint128,uint128),address,bool,(uint128,uint64,uint40)[],(uint40,uint40),address)
          handler: handleCreateDynamic
        - event: RenounceLockupStream(indexed uint256)
          handler: handleRenounce
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer
        - event: TransferAdmin(indexed address,indexed address)
          handler: handleTransferAdmin
        - event: WithdrawFromLockupStream(indexed uint256,indexed address,uint128)
          handler: handleWithdraw
      file: ./src/mappings/index.ts
